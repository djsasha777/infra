global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#DNS FORWARDER

frontend main
 bind 91.149.218.39:443
 bind 91.149.218.39:80
 mode tcp
 tcp-request inspect-delay 5s
 tcp-request content accept if { req.ssl_hello_type 1 }
 default_backend main
 http-request redirect scheme https unless { ssl_fc }

backend main
 mode tcp
 option ssl-hello-chk
 
# info-homepage
 acl info req.ssl_sni -i www.spongo.ru
 use-server info if info
 server info 192.168.49.2:8888

# openconnect
 acl openconnect req.ssl_sni -i openconnect.spongo.ru
 use-server openconnect if openconnect
 server openconnect 127.0.0.1:8443 send-proxy-v2

# nebula
 acl nebula req.ssl_sni -i nebula.spongo.ru
 use-server nebula if nebula
 server nebula 127.0.0.1:4242

# shadowsocks
 acl shadowsocks req.ssl_sni -i shadowsocks.spongo.ru
 use-server shadowsocks if shadowsocks
 server shadowsocks 127.0.0.1:9389

# tinc
 acl tinc req.ssl_sni -i tinc.spongo.ru
 use-server tinc if tinc
 server tinc 127.0.0.1:4244

# argo-cd
 acl argo req.ssl_sni -i argo.spongo.ru
 use-server argo if argo
 server argo 12.12.12.1:443

# gitea
 acl gitea req.ssl_sni -i gitea.spongo.ru
 use-server ingress if gitea
# vault
 acl vault req.ssl_sni -i vault.spongo.ru
 use-server ingress if vault
# nexus
 acl nexus req.ssl_sni -i nexus.spongo.ru
 use-server ingress if nexus
# server ingress
 server ingress 12.12.12.3:443

# router
 acl router req.ssl_sni -i router.spongo.ru
 use-server router if router
 server router 192.168.49.2:8088

# player
 acl player req.ssl_sni -i player.spongo.ru
 use-server player if player
 server player 192.168.49.2:8000

# switch
 acl switch req.ssl_sni -i switch.spongo.ru
 use-server switch if switch
 server switch 192.168.49.2:8886

#switch2
 acl switch2  req.ssl_sni -i switch2.spongo.ru
 use-server switch2 if switch2
 server switch2 192.168.49.2:8887










